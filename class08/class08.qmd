---
title: "Class 8:PCA Mini Project"
author: "Samson A16867000"
format: pdf
---

For example:

```{r}
head(mtcars)
```

```{r}
colMeans(mtcars)
```

```{r}
apply(mtcars, 2, sd)
```

```{r}
x <- scale(mtcars)
head(x)
```

```{r}
round(colMeans(x), 2)
```
Key point: It is usually always a  good idea to scale your data before to PCA...

##Breast Cancer Biopsy Analysis 

# Save your input data file into your Project directory
```{r}
fna.data <- "WisconsinCancer.csv"
```

# Complete the following code to input the data and store as wisc.df
```{r}
wisc.df <- read.csv(fna.data, row.names=1)
```

```{r}
View(wisc.df)
```


```{r}
?head
```


#Create a diagnosis vector for later 
```{r}
diagnosis <- wisc.df[,1]
table(diagnosis)
```

Remove this first `diagnosis` column from the dataset as I don't want to pass this to PCA etc. It is essentially the expert "answer" that we will compare our analysis results to.

```{r}
# We can use -1 here to remove the first columnn
wisc.data <- wisc.df[,-1]
head(wisc.data)
```
## Exploratory Data Analysis 

>. Q1. How many observations are in this dataset?

```{r}
nrow(wisc.data)
```

569 observations in this dataset

>. Q2. How many of the observations have a malignant diagnosis?

```{r}
table(diagnosis)["M"]
```
212 observations have a malignant diagnosis

>. Q3. How many variables/features in the data are suffixed with _mean?

```{r}
colnames(wisc.data)
grep("_mean",colnames(wisc.data))
length(grep("_mean",colnames(wisc.data)))
```

10 varaibles are suffixed with _mean

## Principle Component Analysis 

```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)
```

```{r}
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(wisc.data, scale = T)
summary(wisc.pr)
```

>. Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

Proportion of Variance by PC1 = 0.44

>. Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

3PCs since it'd cumulative proportion is 0.72636

>. Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

7PCs since it'd cumulative proportion is 0.91010


Main "PC score plot," "PC1' vs  PC2 plot"

```{r}
head(wisc.pr$x)
```
>. Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

```{r}
biplot(wisc.pr)
```

What stands out about this plot is that it is that the row names and column names are in the plot which make it very difficult to see.

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2],
     col = as.factor(diagnosis),xlab = "PC1", ylab = "PC2")
```

>. Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,3],
     col = as.factor(diagnosis),xlab = "PC1", ylab = "PC3")
```
I notice that the first plot with PC1 and PC2 has a more distinct separation between the two groups compared to the plot with PC1 and PC3


```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col= diagnosis) + 
  geom_point()
```

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```
```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```
```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```
>. Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

```{r}
loading_vector <- wisc.pr$rotation[,1]  
component <- loading_vector["concave.points_mean"]
component
```


>. Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

5

## Hierarchical Clustering 

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
```

```{r}
data.dist <- dist(data.scaled)
```

```{r}
wisc.hclust <- hclust(data.dist, method = "complete")
```

>. Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h= 19, col="red", lty=2)
```
The clustering model has 4 clusters at height 19 

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k = 4)
```

```{r}
table(wisc.hclust.clusters, diagnosis)
```
>. Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

There were not any better cluster vs diagnosis matches from cutting into a different number of clusters between 2 and 10

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k = 2)
```

```{r}
table(wisc.hclust.clusters, diagnosis)
```
>. Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

I like using "complete" because it is more visually appealing in terms of looking at the crossbars of clusters compared to something we may see from using "single".  

```{r}
d <- dist(wisc.pr$x[,1:3])
hc <- hclust(d, method = "ward.D2")
plot(hc )
```



